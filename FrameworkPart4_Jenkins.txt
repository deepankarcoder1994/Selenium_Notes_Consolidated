Importance of Jenkins in Test Frameworks

Jenkins is a Continuous Integration tool which is primarly developed for Automation.

Scenario where it is used =>

Tests should trigger automatically without any manual Intervention.
the single command triggering that we did in maven section also should be automated.

Suppose thousands of test cases are there and you want their result 9 am in morning.
then we can create a Background job in Jenkins which will trigger all test cases to run at 2 am.
so it will hit the command automatically at 2 am.


--------------


Installing Jenkins

Step 1: Go to this path and download Generic Java Package(.war)

https://www.jenkins.io/download/

Step 2:Go to the location where you jenkins war is located. You need one command to start Jenkins server into your windows machine

java -jar jenkins.war --httpPort=9090



2e73f6c833a6440aa7ee0a0fcc874471

This may also be found at: C:\Users\deepankars\.jenkins\secrets\initialAdminPassword


----------------

Jenkins user name and password

user name : deepankar
pwd : deepankar@123

url => http://localhost:9090/

--------------------------------------------------------------------

How to run maven project designed previously to run via Jenkins?


Step 1: Click on manage Jenkins Icon and Click on global Tool Configuration

Give Java jdk and maven path here like below


apache-maven-3.3.9
D:\apache-maven-3.3.9


jdk1.8.0_271
C:\Program Files\Java\jdk1.8.0_271


Step 2: After that come to Dashboard menu and Click on new Item


Give the job name in Item Name like for ex  "Maven Job"


Step 3: Click on advanced button and check use custom workspace checkbox

Give the directory name as ${JENKINS_HOME}/Mavenjava.

Note :: Make sure Maven Java project is copied to .jenkins folder under the below location.

C:\Users\deepankars\.jenkins


Step 4:Go to build section click on Invoke top-level Maven targets

and give maven version as 	"apache-maven-3.3.9"

in goals section give the maven command you want to run like below. No need to give keyword mvn.

test -PRegression



Step 5:Click on save

Your Job is ready to execute.

Step 6: Go to specific job and Click on Build Now.

It will run and store the result.Click on result and if you want to see console output 
click on "console output" menu. It will show complete logs having all the details of test cases



http://localhost:9090/job/MavenJob/

---------------------------------------------

15/12/2020 -- Lecture 171 --  TestNg Reporting Plugin into Jenkins Job


Once you have run the Job we created in previous lectures

then you go the surefire-reports and click on index.html and get the path.

paste in chrome and you will get to see the results

One more file you will find ie.testng-results.xml => Here all your results are generated in xml file.
Now Test Ng has provided one feature that if you pass this xml to your TestNg it will create reports for you in
Jenkins.


for that some steps you need to perform 


1.Download the plugin named TestNg reports and restart the jenkins

2.go to configure tab for the job named MavenJob created.

and go to post build actions and select Publish TestNg results and save it


3.Let us also schedule Jenkins Job for a specific time.


M H D M DayWeek

15 22 * * *


The meaning of above cron job expression is run everyday,everymonth at 22:15 hrs 


4.After running Test Ng Results link . click on that and click on Package named qaclickacademy.Mavenjava
you will get detailed result that how much time each test case took to execute.























	


